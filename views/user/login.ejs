<!DOCTYPE html>
<html lang="en">

<head>
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
  <meta http-equiv="Pragma" content="no-cache">
  <meta http-equiv="Expires" content="0">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login - SUBTLETY</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/styles/user/login.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
  <style>
    .otp-inputs {
      display: flex;
      justify-content: center;
      margin-top: 20px;
    }

    .otp-box {
      width: 40px;
      height: 40px;
      border: 2px solid #9135ED;
      margin: 0 5px;
      text-align: center;
      font-size: 24px;
      color: #9135ED;
      outline: none;
      cursor: text;
      border-radius: 5px;
    }

    .otp-box:focus {
      border: 2px solid #4CAF50;
      /* Green border on focus */
    }

    /* Input focus styles */
    .form-control:focus {
      border-color: #80bdff;
      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    /* Custom styles for valid/invalid inputs */
    .form-control.is-valid {
      border-color: #28a745;
    }

    .form-control.is-invalid {
      border-color: #dc3545;
    }

    /* Password validation styles */
    .password-validation {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: 10px;
    }

    .password-validation span {
      color: red;
    }

    .password-validation .fa-eye {
      cursor: pointer;
    }
  </style>
</head>

<body>
  <div class="login-container">
    <h2 style="color: #9135ED;" class="text-center">SUBTLETY</h2>

    <!-- Error message placeholder -->
    <% if (errorMessage) { %>
    <div class="alert alert-danger" role="alert" id="errorAlert">
      <%= errorMessage %>
    </div>
    <% } %>

    <form id="loginForm" action="/user/login" method="post">
      <div class="form-group">
        <label for="usermail"><small>Email</small></label>
        <input type="email" class="form-control " id="email" name="email" placeholder="Enter email" required>
        <div class="invalid-feedback"><small>Please enter a valid email address.</small></div>
      </div>
      <div class="form-group password-wrapper">
        <label for="password"><small>Password</small></label>
        <input type="password" class="form-control " id="password" name="password" placeholder="Enter password" required>
        <i class="fa-regular fa-eye" id="togglePassword"></i>
        <div class="invalid-feedback"><small>Password must be at least 6 characters long.</small></div>
      </div>
      <button type="submit" class="btn btn-primary btn-block  hello mt-4">Login</button>
    </form>
    <p class="text-center">or</p>
    <a href='/auth/google' class="btn btn-primary btn-block  hai">
      <img src="/images/google_icon.svg" alt="Google Icon" /> Login with Google
    </a>
     <!-- Demo Login button -->
  <p class="text-center mt-3">
    <button id="demoLoginButton" class="btn btn-secondary btn-block">
      Demo Login
    </button>
  </p>

    <p class="text-center mt-3"><small>Already have an account? </small><a href="/user/signup"><small>Signup here</small></a></p>

    <div class="mt-3" style="display: flex;justify-content: center;align-items: center;flex-direction: column;">
      <a style="text-decoration: none;cursor: pointer;" id="forgotPasswordButton" class="mb-1 btn-link">Forgot Password?</a>
    </div>

    <div id="forgotPasswordForm" style="display: none;">
      <div style="display: flex; align-items: center;">
        <input type="email" id="resetEmail" placeholder="Enter registered email" required style="width: 220px; margin-right: 5px;" oninput="validateEmail(this.value)">
        <button id="sendOtpButton" class="btn btn-sm btn-primary" disabled>Send OTP</button>
      </div>
      <div id="emailValidation" style="display: none; color: red;"><small>Please enter a valid email address.</small></div>
      <div id="loader" style="display: none;">
        <div class="spinner-border text-primary" role="status">
          <span class="sr-only">Loading...</span>
        </div>
        <span id="loaderText">Sending OTP...</span>
      </div>

      <!-- OTP Section -->
      <div id="otpSection" style="display: none;">
        <h3 class="text-center">Enter OTP</h3>
        <div class="otp-inputs text-center">
          <div class="otp-box" id="otp-box-1" contenteditable="true"></div>
          <div class="otp-box" id="otp-box-2" contenteditable="true"></div>
          <div class="otp-box" id="otp-box-3" contenteditable="true"></div>
          <div class="otp-box" id="otp-box-4" contenteditable="true"></div>
          <div class="otp-box" id="otp-box-5" contenteditable="true"></div>
          <div class="otp-box" id="otp-box-6" contenteditable="true"></div>
        </div>
        <small id="timer-message" class="text-danger text-center pt-2 pb-2" style="display: none;"></small>
        <button id="verifyOtpButton" class="btn btn-success btn-block rounded-pill mt-2">Verify OTP</button>
        <button id="resendOtpButton" class="btn btn-secondary btn-block rounded-pill mt-2" style="display: none;">Resend OTP</button>
      </div>
    </div>

    <div id="changePasswordSection" style="display: none;">
      <label for="newPassword"><small>Enter new password</small></label>
      <div class="password-validation">
        <input type="password" id="newPassword" placeholder="New Password" required style="width: 310px; margin-left: 5px;" oninput="validateNewPassword(this.value)">
        <i class="fa-regular fa-eye" id="toggleNewPassword" style="cursor: pointer;"></i>
      </div>
      <span id="newPasswordValidation" style="display: none; color: red;">
        <small>At least 6 characters, 1 uppercase, 1 lowercase, 1 number, 1 special character, no spaces</small>
      </span>

      <label for="confirmNewPassword"><small>Confirm new password</small></label>
      <div class="password-validation">
        <input type="password" id="confirmNewPassword" placeholder="Confirm Password" required style="width: 310px; margin-left: 5px;" oninput="validateConfirmPassword(this.value)">
        <i class="fa-regular fa-eye" id="toggleConfirmNewPassword" style="cursor: pointer;"></i>
      </div>
      <span id="confirmNewPasswordValidation" style="display: none; color: red; font-size:smaller;"></span>

      <button id="changePasswordButton" class="btn btn-primary mt-3" style="width: 310px; margin-left: 5px;">Change Password</button>
    </div>

    <script src="/js/login.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      // Show the forgot password form
      document.getElementById('forgotPasswordButton').onclick = function() {
        document.getElementById('email').disabled = true;
        document.getElementById('password').disabled = true;
        document.getElementById('forgotPasswordForm').style.display = 'block';
      };

      // Send OTP for password reset
      document.getElementById('sendOtpButton').onclick = async function() {
        const email = document.getElementById('resetEmail').value;

        // Show loader and change button text
        document.getElementById('sendOtpButton').style.display = 'none';
        document.getElementById('loader').style.display = 'block';
        document.getElementById('loaderText').innerText = 'Sending OTP...';

        const response = await fetch('/user/send-otp-password-reset', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            email
          })
        });

        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'OTP sent to your email. Please check your inbox.',
          });
          document.getElementById('otpSection').style.display = 'block';
          startOtpTimer(); // Start the timer
          document.getElementById('resetEmail').style.display = 'none'; // Hide the email input
          document.getElementById('sendOtpButton').style.display = 'none'; // Hide the send OTP button
        } else {
          const errorText = await response.text();
          // Show the button again
          document.getElementById('sendOtpButton').style.display = 'block'; // Show the send OTP button again
          document.getElementById('loader').style.display = 'none'; // Hide the loader
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: `Error sending OTP: ${errorText}`,
          });
        }

        // Hide loader and change button text back
        document.getElementById('loader').style.display = 'none'; // Hide loader
        document.getElementById('loaderText').innerText = 'Sending OTP...'; // Reset loader text
      };

      function startOtpTimer() {
        const timerMessage = document.getElementById('timer-message');
        const resendButton = document.getElementById('resendOtpButton');
        let timeLeft = 60; // 60 seconds

        timerMessage.style.display = 'block';
        timerMessage.innerText = `OTP valid for 00:${timeLeft.toString().padStart(2, '0')}`;
        resendButton.style.display = 'none';

        const otpTimeout = setInterval(() => {
          timeLeft--;
          timerMessage.innerText = `OTP valid for 00:${timeLeft.toString().padStart(2, '0')}`;

          if (timeLeft <= 0) {
            clearInterval(otpTimeout);
            timerMessage.innerText = 'You can now resend the OTP.';
            resendButton.style.display = 'block'; // Show resend button
          }
        }, 1000);
      }

      // Handle OTP input and verification
      const otpBoxes = document.querySelectorAll('.otp-box');

      otpBoxes.forEach((box, index) => {
        box.addEventListener('input', (e) => {
          if (e.inputType === "insertText" && e.data) {
            box.textContent = e.data; // Set box content
            box.nextElementSibling?.focus(); // Move to the next box
          }
        });

        box.addEventListener('keydown', (e) => {
          if (e.key === "Backspace") {
            if (box.textContent === '') {
              const previousBox = box.previousElementSibling;
              if (previousBox) {
                previousBox.focus(); // Focus on the previous box
                setTimeout(() => {
                  previousBox.textContent = ''; // Clear the previous box content
                }, 0);
              }
            }
          }
        });
      });

      document.getElementById('verifyOtpButton').addEventListener('click', async () => {
        const otp = Array.from(otpBoxes).map(box => box.textContent).join('');
        const email = document.getElementById('resetEmail').value;

        const response = await fetch('/user/verify-otp-password-reset', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            email,
            otp
          })
        });

        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'OTP verified successfully. Please set your new password.',
          });

          // Show the change password section
          document.getElementById('changePasswordSection').style.display = 'block';
          // Optionally hide the OTP section
          document.getElementById('otpSection').style.display = 'none';
        } else {
          const errorText = await response.text();
          Swal.fire({
            icon: 'error',
            title: 'Invalid OTP!',
            text: `The OTP you entered is invalid: ${errorText}`,
          });
        }
      });

      // Change password
      document.getElementById('changePasswordButton').onclick = async function() {
        const email = document.getElementById('resetEmail').value;
        const newPassword = document.getElementById('newPassword').value;
        const confirmNewPassword = document.getElementById('confirmNewPassword').value;

        // Check if passwords match
        if (newPassword !== confirmNewPassword) {
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'New passwords do not match',
          });
          return;
        }

        const response = await fetch('/user/reset-password', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            email,
            newPassword
          })
        });

        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Password changed successfully.',
          }).then((result) => {
            if (result.isConfirmed) {
              location.reload(); // Refresh the page
            }
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'Error changing password: ' + (await response.text()),
          });
        }
      };

      document.getElementById('resendOtpButton').addEventListener('click', async () => {
        const email = document.getElementById('resetEmail').value;

        // Show loader and change button text
        document.getElementById('resendOtpButton').style.display = 'none';
        document.getElementById('loader').style.display = 'block';
        document.getElementById('loaderText').innerText = 'Resending OTP...';

        const response = await fetch('/user/resend-otp-password-reset', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            email
          })
        });

        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'OTP has been resent to your email.',
          });
          startOtpTimer(); // Restart the timer
        } else {
          const errorText = await response.text();
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: `Error resending OTP: ${errorText}`,
          });
        }

        // Hide loader and change button text back
        document.getElementById('resendOtpButton').style.display = 'none';
        document.getElementById('loader').style.display = 'none';
        document.getElementById('loaderText').innerText = 'Resending OTP...';
      });

      function validateEmail(email) {
        const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        if (re.test(String(email).toLowerCase())) {
          document.getElementById('resetEmail').style.borderColor = 'green';
          document.getElementById('emailValidation').style.display = 'none';
          document.getElementById('sendOtpButton').disabled = false; // Enable the send OTP button
        } else {
          document.getElementById('resetEmail').style.borderColor = 'red';
          document.getElementById('emailValidation').style.display = 'block';
          document.getElementById('sendOtpButton').disabled = true; // Disable the send OTP button
        }
      }

      function validateNewPassword(password) {
        const re = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z0-9!@#$%^&*]).{6,}$/;
        if (re.test(password)) {
          document.getElementById('newPassword').style.borderColor = 'green';
          document.getElementById('newPasswordValidation').style.display = 'none';
        } else {
          document.getElementById('newPassword').style.borderColor = 'red';
          document.getElementById('newPasswordValidation').style.display = 'block';
        }
      }

      function validateConfirmPassword(confirmPassword) {
        const newPassword = document.getElementById('newPassword').value;
        const confirmPasswordValidation = document.getElementById('confirmNewPasswordValidation');

        if (newPassword === confirmPassword) {
          document.getElementById('confirmNewPassword').style.borderColor = 'green';
          confirmPasswordValidation.innerText = ''; // Clear the error message
          confirmPasswordValidation.style.display = 'none'; // Hide the error message
        } else {
          document.getElementById('confirmNewPassword').style.borderColor = 'red';
          confirmPasswordValidation.innerText = 'Passwords do not match.'; // Set the error message
          confirmPasswordValidation.style.display = 'block'; // Show the error message
        }
      }

      // Toggle password visibility
      document.getElementById('toggleNewPassword').onclick = function() {
        const newPasswordInput = document.getElementById('newPassword');
        const type = newPasswordInput.type === 'password' ? 'text' : 'password';
        newPasswordInput.type = type;
        this.classList.toggle('fa-eye');
        this.classList.toggle('fa-eye-slash');
      };

      document.getElementById('toggleConfirmNewPassword').onclick = function() {
        const confirmNewPasswordInput = document.getElementById('confirmNewPassword');
        const type = confirmNewPasswordInput.type === 'password' ? 'text' : 'password';
        confirmNewPasswordInput.type = type;
        this.classList.toggle('fa-eye');
        this.classList.toggle('fa-eye-slash');
      };
    </script>
     <script>
      // Demo login functionality
      document.getElementById('demoLoginButton').onclick = function() {
        // Fill the email and password fields with demo credentials
        document.getElementById('email').value = 'demoUser@gmail.com';
        document.getElementById('password').value = 'Demo@123';
  
        // Hide the Demo Login button
        document.getElementById('demoLoginButton').style.display = 'none';
  
      };
    </script>
</body>

</html>