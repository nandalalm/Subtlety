<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Coupons - SUBTLETY</title>

  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
  <link rel="stylesheet" href="/styles/admin/dashboard.css">
  <link rel="stylesheet" href="/styles/admin/coupons.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <style>
    .modal-body .scrollable-select {
      max-height: 150px;
      overflow-y: auto;
    }

    .is-invalid {
      border-color: #dc3545;
      outline-color: #dc3545;
    }

    .is-valid {
      border-color: #28a745;
      outline-color: #28a745;
    }

    .invalid-feedback {
      display: none;
      color: #dc3545;
      font-size: 80%;
    }

    select.form-control {
      background-image: none !important;
      padding-right: 0.75rem !important;
    }
  </style>
</head>

<body class="bg-light text-dark">
  <div class="d-flex" id="wrapper">
    <div class="sidebar" id="sidebar">
      <div class="sidebar-header text-center mt-4 mb-3">
        <h3 class="text-dark">Admin Panel</h3>
      </div>
      <ul class="list-unstyled components">
        <li><a href="/admin/dashboard" class="sidebar-item"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
        <li><a href="/admin/users" class="sidebar-item"><i class="fas fa-users"></i> Users</a></li>
        <li><a href="/admin/products" class="sidebar-item"><i class="fas fa-box"></i> Products</a></li>
        <li><a href="/admin/categories" class="sidebar-item"><i class="fas fa-th"></i> Category</a></li>
        <li><a href="/admin/orderList" class="sidebar-item"><i class="fas fa-list"></i> Order List</a></li>
        <li><a href="/admin/offer" class="sidebar-item"><i class="fas fa-tags"></i> Offers</a></li>
        <li><a href="/admin/coupons" class="sidebar-item active"><i class="fas fa-ticket-alt"></i> Coupons</a></li>
        <li><a href="/admin/salesReport" class="sidebar-item "><i class="fas fa-chart-line"></i> Sales Report</a></li>
        <li><a href="#settings" class="sidebar-item"><i class="fas fa-cog"></i> Settings</a></li>
        <li>
          <form action="/admin/logout" method="POST" style="display: inline;">
            <button type="submit" class="sidebar-item bg-transparent border-0">
              <i class="fas fa-sign-out-alt"></i> Logout
            </button>
          </form>
        </li>
      </ul>
    </div>

    <div id="page-content-wrapper">
      <nav class="navbar navbar-expand-lg navbar-light bg-light mb-3">
        <button class="btn btn-primary btn-sm" id="menuToggle">
          <i class="fas fa-bars"></i>
        </button>
        <div class="navbar-brand d-flex align-items-center ml-auto">
          <img src="/images/IMG_0986[1].JPG" alt="Admin Profile" class="profile-photo">
          <span class="navbar-text text-dark ml-2">Nandalal</span>
        </div>
      </nav>

      <div class="container-fluid">
        <h2 class="mb-4">Coupons</h2>
        <div class="d-flex justify-content-between mb-2">
          <button class="btn btn-primary mb-2" data-toggle="modal" data-target="#addCouponModal">Add Coupon</button>
          <form class="form-inline">
            <input class="form-control mr-2" type="search" placeholder="Search coupons..." aria-label="Search">
            <button class="btn btn-primary" type="submit">Search</button>
          </form>
        </div>

        <!-- Add Coupon Modal -->
        <div class="modal fade" id="addCouponModal" tabindex="-1" role="dialog" aria-labelledby="addCouponModalLabel" aria-hidden="true">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="addCouponModalLabel">Add Coupon</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="addCouponForm">
                  <div class="form-group">
                    <label for="code">Coupon Code</label>
                    <input type="text" class="form-control" id="code" pattern="^[a-zA-Z0-9]*$" title="No leading or trailing spaces and no special charcters allowed">
                    <div class="invalid-feedback">
                      No leading or trailing spaces and no special charcters allowed
                    </div>
                  </div>
                  <div class="form-group">
                    <label for="addDiscountType">Discount Type</label>
                    <select class="form-control" id="addDiscountType">
                      <option value="">Select Discount Type</option>
                      <option value="flat">Flat</option>
                      <option value="percentage">Percentage</option>
                    </select>
                  </div>
                  <div class="form-group">
                    <label for="addDiscountAmount">Discount Amount</label>
                    <input type="number" class="form-control" id="addDiscountAmount" min="0" pattern="^[0-9]*$" title="Only numbers allowed">
                    <div class="invalid-feedback">
                      For percentage(1-80), For flat (500 or less)
                    </div>
                  </div>
                  <div class="form-group" id="addMinOrderValueGroup" style="display: none;">
                    <label for="addMinOrderValue">Minimum Order Value (Flat Discounts Only)</label>
                    <input type="number" class="form-control" id="addMinOrderValue" min="0" pattern="^[0-9]*$" title="Only numbers allowed">
                    <div class="invalid-feedback">
                      Invalid
                    </div>
                  </div>
                  <div class="form-group" id="addMaxDiscountGroup" style="display: none;">
                    <label for="addMaxDiscount">Max Discount (Percentage Discounts Only)</label>
                    <input type="number" class="form-control" id="addMaxDiscount" min="0" pattern="^[0-9]*$" title="Only numbers allowed">
                    <div class="invalid-feedback">
                      Invalid
                    </div>
                  </div>
                  <div class="form-group">
                    <label for="addExpiresAt">Expiry Date</label>
                    <input type="date" class="form-control" id="addExpiresAt">
                  </div>
                  <div class="form-group">
                    <label for="addUsageLimit">Usage Limit</label>
                    <input type="number" class="form-control" id="addUsageLimit" min="0" pattern="^[0-9]*$" title="Only numbers allowed">
                    <div class="invalid-feedback">
                      Invalid
                    </div>
                  </div>
                  <button type="submit" class="btn btn-primary">Add Coupon</button>
                </form>
              </div>
            </div>
          </div>
        </div>

        <!-- Edit Coupon Modal -->
        <div class="modal fade" id="editCouponModal" tabindex="-1" role="dialog" aria-labelledby="editCouponModalLabel" aria-hidden="true">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="editCouponForm">
                  <input type="hidden" id="editCouponId">
                  <div class="form-group">
                    <label for="editCode">Coupon Code</label>
                    <input type="text" class="form-control" id="editCode" pattern="^[a-zA-Z0-9]*$" title="No leading or trailing spaces and no special charcters allowed">
                    <div class="invalid-feedback">
                      No leading or trailing spaces and no special charcters allowed
                    </div>
                  </div>
                  <div class="form-group">
                    <label for="editDiscountType">Discount Type</label>
                    <select class="form-control" id="editDiscountType">
                      <option value="">Select Discount Type</option>
                      <option value="flat">Flat</option>
                      <option value="percentage">Percentage</option>
                    </select>
                  </div>
                  <div class="form-group">
                    <label for="editDiscountAmount">Discount Amount</label>
                    <input type="number" class="form-control" id="editDiscountAmount" min="0" pattern="^[0-9]*$" title="Only numbers allowed">
                    <div class="invalid-feedback">
                      Invalid
                    </div>
                  </div>
                  <div class="form-group" id="editMinOrderValueGroup" style="display: none;">
                    <label for="editMinOrderValue">Minimum Order Value (Flat Discounts Only)</label>
                    <input type="number" class="form-control" id="editMinOrderValue" min="0" pattern="^[0-9]*$" title="Only numbers allowed">
                    <div class="invalid-feedback">
                      Invalid
                    </div>
                  </div>
                  <div class="form-group" id="editMaxDiscountGroup" style="display: none;">
                    <label for="editMaxDiscount">Max Discount (Percentage Discounts Only)</label>
                    <input type="number" class="form-control" id="editMaxDiscount" min="0" pattern="^[0-9]*$" title="Only numbers allowed">
                    <div class="invalid-feedback">
                      Invalid
                    </div>
                  </div>
                  <div class="form-group">
                    <label for="editExpiresAt">Expiry Date</label>
                    <input type="date" class="form-control" id="editExpiresAt">
                  </div>
                  <div class="form-group">
                    <label for="editUsageLimit">Usage Limit</label>
                    <input type="number" class="form-control" id="editUsageLimit" min="0" pattern="^[0-9]*$" title="Only numbers allowed">
                    <div class="invalid-feedback">
                      Invalid
                    </div>
                  </div>
                  <button type="submit" class="btn btn-warning">Edit Coupon</button>
                </form>
              </div>
            </div>
          </div>
        </div>

        <% if (coupons.length === 0) { %>
        <div class="alert alert-info" role="alert">
          No Coupons found.
        </div>
        <% } else { %>
        <table class="table table-striped">
          <thead>
            <tr>
              <th>#</th>
              <th>Code</th>
              <th>Discount Type</th>
              <th>Discount Amount</th>
              <th>Usage Limit</th>
              <th>Expiry Date</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% coupons.forEach((coupon, index) => { %>
            <tr>
              <td>
                <%= (currentPage - 1) * limit + (index + 1) %>
              </td>
              <td><%= coupon.code %></td>
              <td><%= coupon.discountType === 'flat' ? 'Flat Discount' : 'Percentage Discount' %></td>
              <td>
                <%= coupon.discountType === 'flat' ? `₹ ${coupon.discountAmount}` : `${coupon.discountAmount} %` %>
              </td>
              <td><%= coupon.usageLimit %></td>
              <td><%= new Date(coupon.expiresAt).toLocaleDateString() %></td>
              <td>
                <button class="btn btn-warning btn-sm" onclick='openEditCouponModal(<%= JSON.stringify(coupon) %>)'>Edit</button>
                <button class="btn btn-sm <%= coupon.isActive ? 'btn-secondary' : 'btn-primary' %>" onclick="toggleCouponStatus('<%= coupon._id %>', '<%= coupon.isActive ? 'unlist' : 'list' %>')">
                  <%= coupon.isActive ? 'Unlist' : 'List' %>
                </button>
              </td>
            </tr>
            <% }) %>
          </tbody>
        </table>
        <!-- Pagination Section -->
        <div class="pagination d-flex justify-content-center mb-4">
          <button class="btn btn-secondary mx-1" <%=currentPage===1 ? 'disabled' : '' %> onclick="window.location.href='?page=<%= currentPage - 1 %>'">
            <i class="fas fa-chevron-left"></i>
          </button>

          <span class="mx-2"> <strong>
              <%= currentPage %>
            </strong> </span>

          <button class="btn btn-secondary mx-1" <%=currentPage===totalPages ? 'disabled' : '' %> onclick="window.location.href='?page=<%= currentPage + 1 %>'">
            <i class="fas fa-chevron-right"></i>
          </button>
        </div>
        <% } %>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
  <script>
    // Sidebar toggle functionality
    document.getElementById('menuToggle').addEventListener('click', function() {
      document.getElementById('sidebar').classList.toggle('active');
      document.getElementById('page-content-wrapper').classList.toggle('toggled');
    });

    // Update visibility based on discount type for add modal
    function updateAddDiscountTypeVisibility() {
      const discountType = document.getElementById('addDiscountType').value;
      document.getElementById('addMinOrderValueGroup').style.display = discountType === 'flat' ? 'block' : 'none';
      document.getElementById('addMaxDiscountGroup').style.display = discountType === 'percentage' ? 'block' : 'none';
    }

    // Update visibility based on discount type for edit modal
    function updateEditDiscountTypeVisibility() {
      const discountType = document.getElementById('editDiscountType').value;
      document.getElementById('editMinOrderValueGroup').style.display = discountType === 'flat' ? 'block' : 'none';
      document.getElementById('editMaxDiscountGroup').style.display = discountType === 'percentage' ? 'block' : 'none';
    }

    // Event listener for discount type change in add modal
    document.getElementById('addDiscountType').addEventListener('change', updateAddDiscountTypeVisibility);

    // Event listener for discount type change in edit modal
    document.getElementById('editDiscountType').addEventListener('change', updateEditDiscountTypeVisibility);

    // Initialize visibility for modals
    updateAddDiscountTypeVisibility();
    updateEditDiscountTypeVisibility();

    // Real-time validation for add coupon form
    const addCouponInputs = document.querySelectorAll('#addCouponForm input, #addCouponForm select');

    addCouponInputs.forEach(input => {
      input.addEventListener('input', () => {
        validateInput(input);
      });
    });

    // Real-time validation for edit coupon form
    const editCouponInputs = document.querySelectorAll('#editCouponForm input, #editCouponForm select');

    editCouponInputs.forEach(input => {
      input.addEventListener('input', () => {
        validateInput(input);
      });
    });

    function validateInput(input) {
      if (input.id === 'code' || input.id === 'editCode') {
        if (!/^[a-zA-Z0-9]*$/.test(input.value)) {
          input.setCustomValidity('No leading or trailing spaces and no special characters allowed');
        } else {
          input.setCustomValidity('');
        }
      }

      if (input.id === 'addDiscountAmount' || input.id === 'editDiscountAmount') {
        const discountType = document.getElementById('addDiscountType').value || document.getElementById('editDiscountType').value;

        if (discountType === 'percentage') {
          // For percentage, allow only numbers between 1 and 80
          if (isNaN(input.value) || input.value < 1 || input.value > 80) {
            input.setCustomValidity('Discount amount should be a number between 1 and 80 for percentage discounts.');
          } else {
            input.setCustomValidity('');
          }
        } else {
          // For flat discount, allow any positive number up to 500
          if (isNaN(input.value) || input.value <= 0 || input.value > 500) {
            input.setCustomValidity('Discount amount should be a number between 1 and 500 for flat discounts.');
          } else {
            input.setCustomValidity('');
          }
        }
      }

      if (input.id === 'addMinOrderValue' || input.id === 'editMinOrderValue') {
        if (isNaN(input.value) || input.value <= 0) {
          input.setCustomValidity('Minimum order value should be a number above 0.');
        } else {
          input.setCustomValidity('');
        }
      }

      if (input.id === 'addMaxDiscount' || input.id === 'editMaxDiscount') {
        if (isNaN(input.value) || input.value <= 0) {
          input.setCustomValidity('Minimum order value should be a number above 0.');
        } else {
          input.setCustomValidity('');
        }
      }

      // Apply styles based on validity
      if (input.checkValidity()) {
        input.classList.remove('is-invalid');
        input.classList.add('is-valid');
      } else {
        input.classList.remove('is-valid');
        input.classList.add('is-invalid');
      }
    }

    // Add coupon form submission
    document.getElementById('addCouponForm').addEventListener('submit', function(e) {
      e.preventDefault();

      const code = document.getElementById('code').value.trim();
      const discountAmount = document.getElementById('addDiscountAmount').value;
      const discountType = document.getElementById('addDiscountType').value;
      const maxDiscount = document.getElementById('addMaxDiscount').value;
      const minOrderValue = document.getElementById('addMinOrderValue').value;
      const expiresAt = document.getElementById('addExpiresAt').value;
      const usageLimit = document.getElementById('addUsageLimit').value;

      if (!code || !discountAmount || !discountType || !expiresAt || !usageLimit) {
        Swal.fire('Error!', 'All fields are required.', 'error');
        return;
      }

      if (discountType === 'flat' && (minOrderValue === '' || isNaN(minOrderValue) || minOrderValue <= 0)) {
        Swal.fire('Error!', 'Minimum order value should be a number above 0.', 'error');
        return;
      }

      if (discountType === 'percentage' && (maxDiscount === '' || isNaN(maxDiscount) || maxDiscount <= 0)) {
        Swal.fire('Error!', 'Max discount value should be a number above 0.', 'error');
        return;
      }

      if (isNaN(discountAmount) || discountAmount <= 0) {
        Swal.fire('Error!', 'Discount amount should be a number above 0.', 'error');
        return;
      }

      if (discountType === 'percentage' && (discountAmount < 1 || discountAmount > 80)) {
        Swal.fire('Error!', 'Discount amount should be between 1 and 80 for percentage discounts.', 'error');
        return;
      }

      if (isNaN(usageLimit) || usageLimit <= 0) {
        Swal.fire('Error!', 'Usage limit should be a number above 0.', 'error');
        return;
      }

      const body = {
        code,
        discountAmount,
        discountType,
        maxDiscount,
        minOrderValue,
        expiresAt,
        usageLimit
      };

      fetch('/admin/coupons/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(body)
        })
        .then(response => response.json().then(data => ({
          response,
          data
        })))
        .then(async ({
          response,
          data
        }) => {
          if (response.ok) {
            await Swal.fire('Success!', data.message, 'success');
            $('#addCouponModal').modal('hide');
            location.reload();
          } else {
            await Swal.fire('Error!', data.message, 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire('Error!', 'An error occurred while adding the coupon.', 'error');
        });
    });

    // Function to open edit modal
    function openEditCouponModal(coupon) {
      document.getElementById('editCouponId').value = coupon._id;
      document.getElementById('editCode').value = coupon.code;
      document.getElementById('editDiscountAmount').value = coupon.discountAmount;
      document.getElementById('editDiscountType').value = coupon.discountType;
      updateEditDiscountTypeVisibility();
      document.getElementById('editMinOrderValue').value = coupon.minOrderValue || '';
      document.getElementById('editMaxDiscount').value = coupon.maxDiscount || '';
      document.getElementById('editExpiresAt').value = new Date(coupon.expiresAt).toISOString().split('T')[0];
      document.getElementById('editUsageLimit').value = coupon.usageLimit;
      $('#editCouponModal').modal('show');
    }

    // Edit coupon form submission
    document.getElementById('editCouponForm').addEventListener('submit', function(e) {
      e.preventDefault();

      const couponId = document.getElementById('editCouponId').value;
      const body = {
        code: document.getElementById('editCode').value.trim(),
        discountAmount: document.getElementById('editDiscountAmount').value,
        discountType: document.getElementById('editDiscountType').value,
        maxDiscount: document.getElementById('editMaxDiscount').value,
        minOrderValue: document.getElementById('editMinOrderValue').value,
        expiresAt: document.getElementById('editExpiresAt').value,
        usageLimit: document.getElementById('editUsageLimit').value
      };

      fetch(`/admin/coupons/${couponId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(body)
        })
        .then(response => response.json().then(data => ({
          response,
          data
        })))
        .then(async ({
          response,
          data
        }) => {
          if (response.ok) {
            await Swal.fire('Success!', 'Coupon updated successfully!', 'success');
            $('#editCouponModal').modal('hide');
            location.reload();
          } else {
            await Swal.fire('Error!', data.message, 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire('Error!', 'An error occurred while updating the coupon.', 'error');
        });
    });

    // Toggle coupon status
    function toggleCouponStatus(couponId, action) {
      const message = action === 'unlist' ? 'unlist' : 'list';
      Swal.fire({
        title: 'Are you sure?',
        text: `Do you want to ${message} this coupon?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes',
        cancelButtonText: 'No'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/coupons/toggle-status/${couponId}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
            })
            .then(response => {
              if (response.ok) {
                location.reload(); // Refresh the page on success
              } else {
                Swal.fire('Error', 'Failed to update coupon status', 'error');
              }
            })
            .catch(err => {
              console.error(err);
              Swal.fire('Error', 'An error occurred', 'error');
            });
        }
      });
    }
  </script>

</body>

</html>